apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bitwardenrs.fullname" . }}
  labels:
    {{- include "bitwardenrs.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bitwardenrs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "bitwardenrs.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bitwardenrs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "bitwardenrs.image" . }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ROCKET_PORT
              value: "8080"
            - name: SIGNUPS_ALLOWED
              value: {{ .Values.bitwardenrs.allowSignups | quote }}
            - name: INVITATIONS_ALLOWED
              value: {{ .Values.bitwardenrs.allowInvitation | quote }}
            - name: SHOW_PASSWORD_HINT
              value: {{ .Values.bitwardenrs.showPasswordHint | quote }}
            - name: WEBSOCKET_ENABLED
              value: {{ .Values.bitwardenrs.enableWebsockets | quote }}
            {{- if eq .Values.databaseType "sqlite" }}
            - name: ENABLE_DB_WAL
              value: {{ .Values.bitwardenrs.enableDbWal | quote }}
            {{- else }}
            - name: ENABLE_DB_WAL
              value: "false"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ required "Database URL secret required for external Databases" .Values.databaseSecret }}
                  key: database-url
            {{- end }}
            {{- if .Values.bitwardenrs.domain }}
            - name: DOMAIN
              value: {{ .Values.bitwardenrs.domain | quote }}
            {{- end }}
            {{- if eq .Values.bitwardenrs.admin.enabled true }}
            {{- if eq .Values.bitwardenrs.admin.disableAdminToken true }}
            - name: DISABLE_ADMIN_TOKEN
              value: "true"
            {{- else }}
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.bitwardenrs.admin.existingSecret }}{{ .Values.bitwardenrs.admin.existingSecret }}{{else}}{{ include "bitwardenrs.fullname" . }}{{end}}
                  key: adminToken
            {{- end }}
            {{- end }}
            {{- if eq .Values.bitwardenrs.smtp.enabled true }}
            - name: SMTP_HOST
              value: {{ required "SMTP host is required to enable SMTP" .Values.bitwardenrs.smtp.host | quote }}
            {{- if .Values.bitwardenrs.smtp.from | quote }}
            - name: SMTP_FROM
              value: {{ .Values.bitwardenrs.smtp.from | quote }}
            {{- end }}  
            {{- if .Values.bitwardenrs.smtp.ssl }}
            - name: SMTP_SSL
              value: {{ .Values.bitwardenrs.smtp.ssl | quote }}
            {{- end }}  
            {{- if .Values.bitwardenrs.smtp.port }}
            - name: SMTP_PORT
              value: {{ .Values.bitwardenrs.smtp.port | quote }}
            {{- end }}  
            {{- if .Values.bitwardenrs.smtp.secret }}
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bitwardenrs.smtp.secret }}
                  key: smtpUsername
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bitwardenrs.smtp.secret }}
                  key: smtpPassword
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.bitwardenrs.enableWebsockets }}
            - name: websocket
              containerPort: 3012
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - name: {{ include "bitwardenrs.fullname" . }}
            mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: {{ include "bitwardenrs.fullname" . }}
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim | quote }}{{- else }}{{ include "bitwardenrs.fullname" . }}{{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
