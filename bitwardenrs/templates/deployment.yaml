apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bitwardenrs.fullname" . }}
  labels:
    {{- include "bitwardenrs.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bitwardenrs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "bitwardenrs.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bitwardenrs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ROCKET_PORT
              value: "8080"
            - name: SIGNUPS_ALLOWED
              value: {{ .Values.bitwardenrs.allowSignups | quote }}
            {{- if .Values.bitwardenrs.signupDomains }}
            - name: SIGNUPS_DOMAINS_WHITELIST
              value: {{ join "," .Values.bitwardenrs.signupDomains | quote }}
            {{- end }}
            {{- if and (eq .Values.bitwardenrs.verifySignup true) (eq .Values.bitwardenrs.smtp.enabled false) }}{{ required "Signup verification requires SMTP to be enabled" nil}}{{end}}
            - name: SIGNUPS_VERIFY
              value: {{ .Values.bitwardenrs.verifySignup | quote }}
            {{- if and (eq .Values.bitwardenrs.requireEmail true) (eq .Values.bitwardenrs.smtp.enabled false) }}{{ required "Requiring emails for login depends on SMTP" nil}}{{end}}
            - name: REQUIRE_DEVICE_EMAIL
              value: {{ .Values.bitwardenrs.requireEmail | quote }}
            {{- if .Values.bitwardenrs.emailAttempts }}
            - name: EMAIL_ATTEMPTS_LIMIT
              value: {{ .Values.bitwardenrs.emailAttempts | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.emailTokenExpiration }}
            - name: EMAIL_EXPIRATION_TIME
              value: {{ .Values.bitwardenrs.emailTokenExpiration | quote }}
            {{- end }}
            - name: INVITATIONS_ALLOWED
              value: {{ .Values.bitwardenrs.allowInvitation | quote }}
            {{- if .Values.bitwardenrs.defaultInviteName }}
            - name: INVITATION_ORG_NAME
              value: {{ .Values.bitwardenrs.defaultInviteName | quote }}
            {{- end }}
            - name: SHOW_PASSWORD_HINT
              value: {{ .Values.bitwardenrs.showPasswordHint | quote }}
            - name: WEBSOCKET_ENABLED
              value: {{ .Values.bitwardenrs.enableWebsockets | quote }}
            - name: WEB_VAULT_ENABLED
              value: {{ .Values.bitwardenrs.enableWebVault | quote }}
            - name: SENDS_ALLOWED
              value: {{ .Values.bitwardenrs.enableSends | quote }}
            - name: ORG_CREATION_USERS
              value: {{ .Values.bitwardenrs.orgCreationUsers | quote }}
            {{- if .Values.bitwardenrs.attachmentLimitOrg }}
            - name: ORG_ATTACHMENT_LIMIT
              value: {{ .Values.bitwardenrs.attachmentLimitOrg | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.attachmentLimitUser }}
            - name: USER_ATTACHMENT_LIMIT
              value: {{ .Values.bitwardenrs.attachmentLimitUser | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.hibpApiKey }}
            - name: HIBP_API_KEY
              value: {{ .Values.bitwardenrs.hibpApiKey | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.autoDeleteDays }}
            - name: TRASH_AUTO_DELETE_DAYS
              value: {{ .Values.bitwardenrs.autoDeleteDays | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.extraEnv }}
            {{- range $key, $val := .Values.bitwardenrs.extraEnv }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
            {{- include "bitwardenrs.dbTypeValid" . }}
            {{- if .Values.database.retries }}
            - name: DB_CONNECTION_RETRIES
              value: {{ .Values.database.retries | quote }}
            {{- end }}
            {{- if .Values.database.maxConnections }}
            - name: DATABASE_MAX_CONNS
              value: {{ .Values.database.maxConnections | quote }}
            {{- end }}
            {{- if eq .Values.database.type "sqlite" }}
            - name: ENABLE_DB_WAL
              value: {{ .Values.database.wal | quote }}
            {{- else }}
            - name: ENABLE_DB_WAL
              value: "false"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.database.existingSecret }}{{ .Values.database.existingSecret }}{{else}}{{ include "bitwardenrs.fullname" . }}{{end}}
                  key: database-url
            {{- end }}
            {{- if .Values.bitwardenrs.domain }}
            - name: DOMAIN
              value: {{ .Values.bitwardenrs.domain | quote }}
            {{- end }}
            {{- if eq .Values.bitwardenrs.admin.enabled true }}
            {{- if eq .Values.bitwardenrs.admin.disableAdminToken true }}
            - name: DISABLE_ADMIN_TOKEN
              value: "true"
            {{- else }}
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bitwardenrs.admin.existingSecret | default (include "bitwardenrs.fullname" .) }}
                  key: admin-token
            {{- end }}
            {{- end }}
            - name: EMERGENCY_ACCESS_ALLOWED
              value: {{ .Values.bitwardenrs.emergency.enabled | quote }}
            {{- if eq .Values.bitwardenrs.emergency.enabled true }}
            {{- if not (kindIs "invalid" .Values.bitwardenrs.emergency.reminder) }}
            - name: EMERGENCY_NOTIFICATION_REMINDER_SCHEDULE
              value: {{ .Values.bitwardenrs.emergency.reminder | quote }}
            {{- end }}
            {{- if not (kindIs "invalid" .Values.bitwardenrs.emergency.timeout) }}
            - name: EMERGENCY_REQUEST_TIMEOUT_SCHEDULE
              value: {{ .Values.bitwardenrs.emergency.timeout | quote }}
            {{- end }}
            {{- end }}            
            {{- if eq .Values.bitwardenrs.smtp.enabled true }}
            - name: SMTP_HOST
              value: {{ required "SMTP host is required to enable SMTP" .Values.bitwardenrs.smtp.host | quote }}
            - name: SMTP_FROM
              value: {{ required "SMTP sender address ('from') is required to enable SMTP" .Values.bitwardenrs.smtp.from | quote }}
            {{- if .Values.bitwardenrs.smtp.fromName }}
            - name: SMTP_FROM_NAME
              value: {{ .Values.bitwardenrs.smtp.fromName | quote }}
            {{- end }}
            - name: SMTP_SSL
              value: {{ .Values.bitwardenrs.smtp.ssl | quote }}
            {{- if .Values.bitwardenrs.smtp.explicitTLS }}
              {{- if (eq .Values.bitwardenrs.smtp.ssl false) }}
                {{- required "Explicit TLS requires SSL to be enabled" nil }}
              {{- end }}
            - name: SMTP_EXPLICIT_TLS
              value: {{ .Values.bitwardenrs.smtp.explicitTLS | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.smtp.port }}
            - name: SMTP_PORT
              value: {{ .Values.bitwardenrs.smtp.port | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.smtp.authMechanism }}
            - name: SMTP_AUTH_MECHANISM
              value: {{ .Values.bitwardenrs.smtp.authMechanism | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.smtp.heloName }}
            - name: HELO_NAME
              value: {{ .Values.bitwardenrs.smtp.heloName | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.smtp.timeout }}
            - name: SMTP_TIMEOUT
              value: {{ .Values.bitwardenrs.smtp.timeout | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.smtp.invalidHostname }}
            - name: SMTP_ACCEPT_INVALID_HOSTNAMES
              value: {{ .Values.bitwardenrs.smtp.invalidHostname | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.smtp.invalidCertificate }}
            - name: SMTP_ACCEPT_INVALID_CERTS
              value: {{ .Values.bitwardenrs.smtp.invalidCertificate | quote }}
            {{- end }}
            {{- if or .Values.bitwardenrs.smtp.existingSecret .Values.bitwardenrs.smtp.user }}
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bitwardenrs.smtp.existingSecret | default (include "bitwardenrs.fullname" .) }}
                  key: smtp-user
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bitwardenrs.smtp.existingSecret | default (include "bitwardenrs.fullname" .) }}
                  key: smtp-password
            {{- end }}
            {{- end }}
            {{- if eq .Values.bitwardenrs.yubico.enabled true }}
            {{- if .Values.bitwardenrs.yubico.server }}
            - name: YUBICO_SERVER
              value: {{ .Values.bitwardenrs.yubico.server | quote }}
            {{- end }}  
            - name: YUBICO_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bitwardenrs.yubico.existingSecret | default (include "bitwardenrs.fullname" .) }}
                  key: yubico-client-id
            - name: YUBICO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bitwardenrs.yubico.existingSecret | default (include "bitwardenrs.fullname" .) }}
                  key: yubico-secret-key
            {{- end }}
            {{- if .Values.bitwardenrs.log.file }}
            - name: LOG_FILE
              value: {{ .Values.bitwardenrs.log.file | quote }}
            {{- end }}
            {{- if or .Values.bitwardenrs.log.level .Values.bitwardenrs.log.timeFormat }}
            - name: EXTENDED_LOGGING
              value: "true"
            {{- end }}
            {{- if .Values.bitwardenrs.log.level }}
            {{- include "bitwardenrs.logLevelValid" . }}
            - name: LOG_LEVEL
              value: {{ .Values.bitwardenrs.log.level | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.log.timeFormat }}
            - name: LOG_TIMESTAMP_FORMAT
              value: {{ .Values.bitwardenrs.log.timeFormat | quote }}
            {{- end }}
            {{- if .Values.bitwardenrs.icons.disableDownload }}
            - name: DISABLE_ICON_DOWNLOAD
              value: {{ .Values.bitwardenrs.icons.disableDownload | quote }}
              {{- if and (not .Values.bitwardenrs.icons.cache) (eq .Values.bitwardenrs.icons.disableDownload "true") }}
            - name: ICON_CACHE_TTL
              value: 0
              {{- end }}
            {{- end }}
            {{- if .Values.bitwardenrs.icons.cache }}
            - name: ICON_CACHE_TTL
              value: {{ .Values.bitwardenrs.icons.cache }}
            {{- end }}
            {{- if .Values.bitwardenrs.icons.cacheFailed }}
            - name: ICON_CACHE_NEGTTL
              value: {{ .Values.bitwardenrs.icons.cacheFailed }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.bitwardenrs.enableWebsockets }}
            - name: websocket
              containerPort: 3012
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: {{ include "bitwardenrs.domainSubPath" . }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ include "bitwardenrs.domainSubPath" . }}
              port: http
          volumeMounts:
          - name: {{ include "bitwardenrs.fullname" . }}
            mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: {{ include "bitwardenrs.fullname" . }}
        {{- if and .Values.persistence.enabled .Values.customVolume }}
          {{ required "customVolume cannot be used if persistence is enabled." nil }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim | quote }}{{- else }}{{ include "bitwardenrs.fullname" . }}{{- end }}
        {{- else if .Values.customVolume }}
          {{- toYaml .Values.customVolume | nindent 8 }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
