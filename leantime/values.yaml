# Leantime Helm Chart variables

# Database settings
internalDatabase:
  # Run a MariaDB container in pod.
  enabled: true
  # Listener port
  port: 3306
  image:
    repository: mariadb
    pullPolicy: IfNotPresent
    tag: "10.6.21"
  # Persistent Volume for internal database. If disabled, data will be lost when pod is destroyed.
  # Will be mounted on /var/lib/mysql
  persistence:
    enabled: false
    size: 2Gi
    accessMode: ReadWriteOnce
    ## Persistent Volume storage class
    # storageClass: "-"
    ## Use existing Persistent Volume Claim
    # existingClaim:
  # Setup limits if desired
  resources: {}
  securityContext: {}
  # Database username.
  user: leantime
  # User password, defaults to random
  password: ""
  # Root password, defaults to random
  rootPassword: ""
  # Use existing secret for user, user password and root password. Default keys are 'database-root', 'database-user' and 'database-password'.
  #existingSecret:
  ## Inject custom environment variables. Use carefully.
  #extraEnv:
  #  MARIADB_AUTO_UPGRADE: 1
externalDatabase:
  enabled: false
  host: ""
  database: leantime
  port: 3306
  user: ""
  password: ""
  ## Use existing secret for database credentials. Keys are 'database-user' and 'database-password'.
  #existingSecret:

leantime:
  ## Site name. Defaults to 'Leantime'
  name: ""
  ## Site languange. Defaults to 'en-US'
  language: ""
  ## Main color in hex RGB. Defaults to '#006d9f'
  primaryColor: ""
  ## Secondary color in hex RGB. Defaults to '#00a886'
  secondaryColor: ""
  ## Default site theme
  defaultTheme: ""
  ## Keep theme and language from previous user for login screen
  #keepTheme: true
  ## Site logo image path. Defaults to '/images/logo.svg'
  logo: ""
  ## Site logo image path for printing (must be jpg or png format). Defaults to '/images/logo.jpg'
  printLogo: ""
  ## Default Timezone (see list at https://www.php.net/manual/en/timezones.php)
  defaultTimezone: ""
  ## Base URL (e.g. https://leantime.domain.tld). Defaults to Ingress/IngressRoute host if enabled.
  url: ""
  ## Session salt. Defaults to randomly generated.
  sessionSalt: ""
  ## Session expiration. Defaults to 8 hours (28800s).
  #sessionExpiration:
  ## Allow per-project menu
  #projectMenu: false
  ## Enable debug (0 to disable, 1 to enable)
  #debug: 0
  ## Use existing secret for session salt. Key is 'session-salt'.
  #existingSecret:

  s3:
    enabled: false
    # S3 endpoint (empty | https://my-minio_host)
    endpoint: ""
    # S3 use path style of subdomain style (true ==> https://[endpoint]/[bucket] ; false => https://[bucket].[endpoint])
    usePathStyleEndpoint: false
    ## S3 Key (required)
    key: ""
    ## S3 Secret (required)
    secret: ""
    ## S3 Bucket (required)
    bucket: ""
    ## S3 Region (required)
    region: ""
    ## S3 sub-folder
    #folder:
    ## Use existing secret for S3 key and secret. Keys are 's3-key' and 's3-secret'
    #existingSecret:

  smtp:
    enabled: false
    ## SMTP sender - required.
    from: ""
    ## SMTP host - required.
    host: ""
    ## SMTP Authentication required.
    auth: true
    ## SMTP username - required unless existing secret is used or auth is disabled.
    user: ""
    ## SMTP password - required unless existing secret is used or auth is disabled.
    password: ""
    ## SMTP port
    #port:
    ## Force specific security protocol (tls, ssl or starttls).
    #secureProtocol:
    ## Enable TLS automatically if supported by server. Enabled by default.
    #autoTLS: false
    ## Allow insecure SSL: Don't verify certificate, accept self-signed, etc. Disabled by default.
    #insecureSSL: true
    ## Use existing secret for SMTP username and password. Keys are 'smtp-user' and 'smtp-password'
    #existingSecret:

  ldap:
    enabled: false
    ## LDAP URI
    #uri: ""
    ## LDAP host - Required if URI is not set
    #host: ""
    ## LDAP port
    #port:
    ## LDAP user DN (e.g. CN=users,DC=example,DC=com) - required.
    userDN: ""
    ## LDAP domain
    #domain: ""
    ## LDAP Directory type (OL for OpenLDAP, AD for Active Directory)
    #type: ""
    ## JSON mapping of user fields with LDAP user attributes
    #keys: ""
    ## JSON mapping of user role with LDAP group
    #groupRoles: ""
    ## Default role number if no mapped group is found
    #defaultRole: 20

  oidc:
    enabled: false
    # Client ID - Required unless existing secret is used
    clientId: ""
    # Client Secret - Required unless existing secret is used
    clientSecret: ""
    # Provider URL - Required
    providerUrl: ""
    ## Create Leantime user if it doesn't exist, otherwise fail login
    #createUser: true
    ## Default role for users created via OIDC (20 is editor)
    #defaultRole: 20
    ## Use existing secret for OIDC client id and secret. Keys are 'oidc-client-id' and 'oidc-client-secret'
    #existingSecret:

    overrides:
      ## Auth URL
      #authUrl: ""
      ## Token URL
      #tokenUrl: ""
      ## JSON Web Key Sets URL
      #jwksUrl: ""
      ## User Info URL
      #userInfoUrl: ""
      ## Certificate String
      #certificateString: ""
      ## Certificate File
      #certificateFile: ""
      ## OIDC Scopes
      #scopes: ""
      ## Override Fields names
      fields:
        ## Email
        #email: ""
        ## First Name
        #firstName: ""
        ## Last Name
        #lastName: ""
        ## Phone
        #phone: ""
        ## Job Title
        #jobTitle: ""
        ## Job Level
        #jobLevel: ""
        ## Department
        #department: ""

  redis:
    enabled: false
    # URL of Redis server, not recommended if authentication is required. If empty, the entries below will be used instead.
    url: ""
    # Redis host, required it URL not used
    host: ""
    # Redis port
    #port: 6379
    # Redis scheme
    #scheme: tcp
    # Redis password, will be stored in common Secret unless existingSecret is used
    #password:
    # Existing secret for password, key is 'redis-password'
    #existingSecret:
  
  ratelimit: {}
    # General rate limit
    #general:
    # API rate limit
    #api:
    # Auth rate limit
    #auth: 

  ## Map of custom environment variables. Use carefully.
  #extraEnv:
  #  LEAN_XXX: value

service:
  type: ClusterIP
  port: 80
  externalTrafficPolicy: Cluster
  # loadBalancerIP:
  nodePorts:
    # Choose NodePorts manually
    http: ""

# Kubernetes Ingress
ingress:
  enabled: false
  className: ""
  host: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: leantime-tls
  #    hosts:
  #      - leantime.local

# Traefik IngressRoute CRD
ingressRoute:
  enabled: false
  # Starting on Traefik 2.10, the IngressRoute CRD moved to traefik.io namespace
  newCRD: false
  # Mandatory to enable IngressRoute
  host: ""
  entrypoints:
    - websecure
  tls:
    []
    #certResolver: letsencrypt

# Enable persistent storage for user files.
# Subpaths will be mounted: 'userfiles' into /var/www/userfiles, 'public-userfiles' into /var/www/public/userfiles
persistence:
  enabled: false
  size: 1Gi
  accessMode: ReadWriteOnce
  ## Persistent Volume storage class
  # storageClass: "-"
  ## Use existing Persistent Volume Claim
  # existingClaim:
  ## Annotations to add to the Persistent Volume Claim
  annotations: {}

# Additional volumes, to be used by sidecars
#additionalVolumes: []

sessionstorage:
  enabled: false
  size: 1Gi
  accessMode: ReadWriteOnce
  ## Persistent Volume storage class
  # storageClass: "-"
  ## Use existing Persistent Volume Claim
  # existingClaim:
image:
  repository: leantime/leantime
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

revisionHistoryLimit: 10

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false

## @param automountServiceAccountToken Mount Service Account token in pod
##
automountServiceAccountToken: false

# Annotations to add to the Deployment
deploymentAnnotations: {}
# Readiness and Liveness probes
probes: {}
  #liveness:
    #timeoutSeconds: 1
    #periodSeconds: 10
    #successThreshold: 1
    #failureThreshold: 3
  #readiness:
    #timeoutSeconds: 1
    #periodSeconds: 10
    #successThreshold: 1
    #failureThreshold: 3

# initContainers containers, add container spec (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Container)
# No templating possible, values need to be hardcoded
initContainers: []
#  - name: initcontainer
#    image: initcontainer:1.2.3
#    env:
#      - name: INITCONTAINER_END
#        value: "initcontainer"
#    volumeMounts:
#      - name: leantime
#        mountPath: /data

# Sidecar containers, add container spec (https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Container)
# No templating possible, values need to be hardcoded
sidecars: []
#  - name: sidecar
#    image: sidecarimage:1.2.3
#    env:
#      - name: SIDECAR_END
#        value: "sidecar"
#    volumeMounts:
#      - name: leantime
#        mountPath: /data

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

strategy: {}

nodeSelector: {}

tolerations: []

affinity: {}
